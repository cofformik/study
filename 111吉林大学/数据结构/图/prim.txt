#include<iostream>
#include<vector>
using namespace std;
const int INF = 0x3f3f3f3f;
const int maxn = 610;
int G[maxn][maxn];
int s[maxn], lowcost[maxn];
vector<int> scc[maxn];
int cnt = 0;
int n, e;
int findmin() {
    int v = -1, Min = INF;
    for (int i = 0; i <= n; ++i) {
        if (s[i] == 0 && lowcost[i] < Min) {
            v = i;
            Min = lowcost[i];
        }
    }
    return v;
}
int Prim(int u) {
    int ans = 0;
    for (int i = 0; i <= n; ++i) {
        lowcost[i] = INF;
        s[i]=0;
    }
    lowcost[u] = 0;
    for (int i = 0; i <= n; ++i) {
        int v = findmin();
        if (v == -1) return ans;
        scc[cnt].push_back(v);
        ans += lowcost[v];
        s[v] = 1;
        for (int j = 0; j <= n; ++j) {
            if (s[j] == 0 && lowcost[j] > G[v][j]) {
                lowcost[j] = G[v][j];
            }
        }
    }
    return ans;
}
int main() {
    scanf("%d%d", &n, &e);
    for (int i = 0; i < n; ++i) {
        int x; scanf("%d", &x);
        G[n][i]=x;
        G[i][n]=x;
    }
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++) {
            G[i][j] = INF;
        }
    for (int i = 0; i < e; ++i) {
        int a, b, c;
        scanf("%d%d%d", &a, &b, &c);
        G[a][b] = c;
        G[b][a]=c;
    }
    int ans=Prim(n);
    printf("%d\n", ans);
    return 0;
}
