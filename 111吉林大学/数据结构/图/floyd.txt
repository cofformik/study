#define _CRT_SECURE_NO_WARNINGS
#include<iostream>
#include<vector>
using namespace std;
const int maxn = 220;
const int INF = 1000000;
int n, e;
int Floyd(int G[maxn][maxn]) {
	int D[maxn][maxn],path[maxn][maxn];
	for(int i=0;i< n;++i)
		for (int j = 0; j < n; ++j) {
			D[i][j] = G[i][j];
		}
	for (int k = 0; k < n; ++k)
		for (int i = 0; i < n; ++i)
			for (int j = 0; j < n; ++j) {
			D[i][j] = min(D[i][j], D[i][k] + D[k][j]);
		}
	int minl=INF,ans=-1;
	for (int i = 0; i < n; ++i) {
		int k = 0;
		for (int j = 0; j < n; ++j) {
			k += D[i][j];
		}
		if (minl > k) {
			ans = i;
			minl = k;
		}
	}
	return ans;
}
int main() {
	while (scanf("%d%d", &n, &e) != EOF) {
		int G[maxn][maxn];
		for (int i = 0; i < n; ++i)
			for (int j = 0; j < n; ++j) {
				G[i][j] = INF;
			}

		while (e--) {
			int a, b, c;
			scanf("%d%d%d", &a, &b, &c);
			G[a][b] = c;
			G[b][a] = c;
		}
		printf("%d\n", Floyd(G));
	}
	return 0;
}