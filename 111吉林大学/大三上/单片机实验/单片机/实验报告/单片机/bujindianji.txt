;使用中断来同步，摘自程序中断的典型例子
ORG 0000H                   ;复位起始地址
    LJMP START 
ORG 000BH                   ;中间地址保留给中断向量表
    LJMP EINT0              ;定时器0中断程序入口地址
ORG 0040H                   ;程序实际起始地址
​
START:                      ;初始化
    
    P4 EQU 0C0H             ;单片机P4口地址，PPT中给出         
    P4SW EQU 0BBH           ;P4 方式控制字地址
    MOV P4SW,#70H        
    CLK EQU P4.4            ;时钟线         
    DAT EQU P4.5            ;数据线          
    SW EQU P3.6             ;该单片机上电复位后须设置P4SW寄存器
    MOV DPTR,#TAB           ;将断码表首地址传给数据指针寄存器，TAB为发光管设置。值为--5D3E
LP:
    MOV R3,#0               ;计数 数码管显示 个位       
    MOV R4,#0               ;计数 数码管显示 十位
    MOV R5,#0               ;计数 数码管显示 百位
​
                            ;TMOD 方式寄存器
I1:     
    MOV TMOD,#01H           ; TMOD是方式寄存器0000 0001B 定时方式，不受外部控制
    
    MOV IE,#82H             ;允许中断,T0中断允许 中断控制字;直接对中断寄存器IE 和优先级寄存器 IP设置
​
    
    ORL IP,#2H              ;逻辑或,T0中断的优先级高
        
    SETB P1.1               ;CE1 置1
    SETB P1.4               ;CE2 置1
    ;只要将CE1和CE2分别置为高，然后IN1和IN2按照预定的脉冲输出，即01->11->10->00->01
    ;这个循环构成一个方向旋转的输出脉冲，将此序列翻转，就是相反方向的输出脉冲。
​
    ;P3.7---S2,P3.6---S1,R1---循环次数
    ;R0/20H---脉冲时序,R2---快慢速
​
NEXT:                       ;判断S2，当按下S2开关时，按照顺时针旋转；当松开时，按照逆时针旋转。
    JB P3.7,OPP             ;若 P3.7=1,s2按下跳转到OPP
    MOV R0,#01111000B       ;按下s2为顺时针   --78
    MOV 20H,R0              ;将步进电机的脉冲时序排序存储到20H地址中
    LJMP SS1                
OPP:
    MOV R0,#00101101B       ;松开为逆时针     --2D
    MOV 20H,R0              ;将步进电机的脉冲时序排序存储到20H地址中
​
;当按下S1开关时，进行快速旋转，速度为60转/分。当松开开关时，进行慢速旋转，速度为10转/分。
​
SS1:                        ;如果直接寻址单元的值为1，则转移；
    JB P3.6,SPD             ;若 P3.6=1,s1没有按下，慢速；按下S1则跳转
    MOV R2,#0H              ;快速,(5D3E #TAB)
    LJMP L0
SPD:
    MOV R2,#1H              ;慢速
​
​
L0:
    MOV R1,#4               ;相位四次变换，将对应的循环次数4保存到R1中
    MOV R0,20H              ;取出步进电机的脉冲时序
​
;只要将CE1和CE2分别置为高，然后IN1和IN2按照预定的脉冲输出，即01->11->10->00->01
;这个循环构成一个方向旋转的输出脉冲，将此序列翻转，就是相反方向的输出脉冲。
​
L1:
    MOV A,R0     
    RLC A                   ;累加器A循环左移 
    MOV P3.2,C              ;IN1 脉冲高一位送至INT1 
    RLC A       
    MOV P1.0,C              ;IN2 PPT上 低一位送至INT2
    MOV R0,A                ;将累加器A循环左移两位之后的结果保存到R0中
    
    LCALL NUM               ;LED显示器显示步进电机的已转动的次数
    LCALL TIME              ;定时器
    DJNZ R1,L1              ;R1 -1，结果不为0继续循环，循环次数4
    LJMP NEXT               ;重新判断开关是否按下，死循环
    
;定时器子程序
​
TIME:
    CJNE R2,#1,QUICK    
    MOV R6,#6               ;慢速六次计时
TIM2:
;得到的计数器初值s需要分成高8位和低8位，分别放入计数器
;TH0和TL0
    MOV TH0,#5DH            ；初值5D3E，已经解释过了
    MOV TL0,#3EH 
    SETB TR0                ;TR0置0控制定时器0允许计数，如果CPU响应定时器中断则此位为1时，发生定时器中断，在中断响应时由硬件清零。
    MOV R7,#0H              ;R7为中断判断标志，置0
TIM3:                       ;Slower
    CJNE R7,#1H,TIM3        ;空循环，等待定时器中断产生
    ;等于0则顺次执行
    ;这组指令把源操作数减 1，结果回送到源操作数中；如果结果不为 0 则转移。不改变标志位。
    DJNZ R6,TIM2            ;R6 -1，结果不为0继续循环
    LJMP OUT
QUICK: 
    MOV TH0,#5DH            ;定时器0启动,快速状态60转/分
    MOV TL0,#3EH 
    SETB TR0                ;TR0置0控制定时器0允许计数，如果CPU响应定时器中断则此位为1时，发生定时器中断，在中断响应时由硬件清零。
    MOV R7,#0H              ;R7为中断判断标志，置0
TIM1:                       ;Faster
    CJNE R7,#1H,TIM1        ;若等于0则顺次执行;快速的直接跳出，慢速的需要R6变成0才跳出。
OUT: 
RET
​
​
​
​
EINT0:                      ;中断程序
    MOV R7,#1               ;中断标志置1
RETI            
​
​
​
NUM:                        ;调用LED显示器的子程序，显示步进电机已转动的次数
S0: 
;R3-5 个十百
    MOV A,R3    
    CALL EXP    
    MOV A,R4 
    CALL EXP 
    MOV A,R5 
    CALL EXP
​
    CJNE R3,#9,S1           ;个位需要进位
    MOV R3,#0 
    CJNE R4,#9,S2           ;十位
    MOV R4,#0 
    CJNE R5,#9,S3           ;百位
    MOV R5,#0
S1:
    INC R3 
    LJMP STOP
S2:
    INC R4 
    LJMP STOP
S3:
    INC R5 
    LJMP STOP 
STOP: 
    RET
​
EXP:                        ;显示数码管
    MOV 21H,R0              ;压栈，保存之前R0的值
    MOVC A,@A+DPTR          ;将累加器与数据指针寄存器的值相加存到A中
    MOV R0,#8               ;循环8次，（由高到低8个bit）
CLY: 
    CLR CLK                 ;P4.4 CLR清0，移位寄存器
    RLC A                   ;累加器A的逻辑操作指令
    MOV DAT,C               ;8位数据按位输出
    SETB CLK                ;P4.4   时钟线高电平，产生上升沿，移位寄存器
    
    DJNZ R0,CLY 
    MOV R0,21H  ·           ;弹栈
    RET                     ;返回主程序
​
​
TAB:                        ;5D3E
    DB 0C0H,0F9H,0A4H,0B0H,99H,92H,82H,0F8H,80H,90H 
END
​